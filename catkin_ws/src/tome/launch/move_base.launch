<launch>
    <!--______________________________________-->
         <!-- Run Map Server and Run AMCL -->
    <!--______________________________________-->
    <include file="$(find tome)/launch/localization.launch" />
    <remap from="cmd_vel" to="/cmd_vel" />

    <!--________________________-->
         <!-- Run move_base -->
    <!--________________________-->
    <arg name="no_static_map" default="false"/>

    <arg name="base_global_planner" default="navfn/NavfnROS"/>
    <arg name="base_local_planner" default="dwa_local_planner/DWAPlannerROS"/>
    <!-- <arg name="base_local_planner" default="base_local_planner/TrajectoryPlannerROS"/> -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

        <param name="base_global_planner" value="$(arg base_global_planner)"/>
        <param name="base_local_planner" value="$(arg base_local_planner)"/>
        <rosparam file="$(find tome)/params/planner.yaml" command="load"/>

        <!-- observation sources located in costmap_common.yaml -->
        <rosparam file="$(find tome)/params/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find tome)/params/costmap_common.yaml" command="load" ns="local_costmap" />

        <!-- local costmap, needs size -->
        <rosparam file="$(find tome)/params/costmap_local.yaml" command="load" ns="local_costmap" />
        <param name="local_costmap/width" value="10.0"/>
        <param name="local_costmap/height" value="10.0"/>

        <!-- static global costmap, static map provides size -->
        <rosparam file="$(find tome)/params/costmap_global_static.yaml" command="load" ns="global_costmap" unless="$(arg no_static_map)"/>

    </node>

</launch>